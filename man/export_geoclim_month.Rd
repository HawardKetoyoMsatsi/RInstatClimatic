% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/export_geoclim_month.R
\name{export_geoclim_month}
\alias{export_geoclim_month}
\title{Export monthly data in GeoCLIM format}
\usage{
export_geoclim_month(
  data,
  year,
  month,
  element,
  station_id,
  latitude,
  longitude,
  metadata = NULL,
  join_by = NULL,
  add_cols = NULL,
  file_path = paste0("GEOCLIM-", element, ".csv"),
  ...
)
}
\arguments{
\item{data}{\code{data.frame} The data.frame to calculate from.}

\item{year}{\code{character(1)} The name of the year column in \code{data}. If \code{NULL} it will be created using \code{lubridate::year(data[[date_time]])}.}

\item{month}{\code{character(1)} The name of the month column in \code{data}. If \code{NULL} it will be created using \code{lubridate::month(data[[date_time]])}.}

\item{element}{\code{character(1)} The name of the element column in \code{data} to apply the function to.}

\item{station_id}{\code{character(1)} The name of the station column in \code{metadata}, or \code{data} if \code{metadata = NULL}.}

\item{latitude}{\code{character(1)} The name of the latitude column in \code{metadata}, or \code{data} if \code{metadata = NULL}.}

\item{longitude}{\code{character(1)} The name of the longitude column in \code{metadata}, or \code{data} if \code{metadata = NULL}.}

\item{metadata}{\code{data.frame} The metadata data.frame to calculate from.}

\item{join_by}{\code{character} The variable(s) to merge the \code{data} and \code{metadata} data frames.}

\item{add_cols}{\code{character} Names of additional metadata columns that should be included in the output}

\item{file_path}{\code{character(1)} A character specifying the file path and file name to export.}

\item{...}{Other parameters passed to \code{write.csv()}.}
}
\value{
Invisibly returns the file path of the saved data.
}
\description{
\code{export_geoclim_month} takes a data frame that is given by
month. This data frame is then rearranged using \code{prepare_geoclim_month} to a
format suitable for use in GeoCLIM, and then written to a file or connection.
}
\examples{
# Calculate monthly summaries for the rainfall column
summary_data <- daily_niger \%>\% dplyr::group_by(year, month, station_name) \%>\%
     dplyr::summarise(mean_rain = mean(rain))
export_geoclim_month(data = summary_data, year = "year", month = "month",
                     station_id = "station_name",
                     element = "mean_rain", metadata = stations_niger,
                     join_by = "station_name",
                     latitude = "lat", longitude = "long")
}
