% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/climatic_extremes.R
\name{climatic_extremes}
\alias{climatic_extremes}
\title{Calculate extremes from climatic data}
\usage{
climatic_extremes(
  data,
  date_time,
  elements,
  station = NULL,
  year = NULL,
  month = NULL,
  dekad = NULL,
  pentad = NULL,
  to = c("hourly", "daily", "pentad", "dekadal", "monthly", "annual-within-year",
    "annual", "longterm-monthly", "longterm-within-year", "station", "overall"),
  by = NULL,
  doy = NULL,
  doy_first = 1,
  doy_last = 366,
  max_val = TRUE,
  min_val = FALSE,
  first_date = FALSE,
  n_dates = FALSE,
  last_date = FALSE,
  na_rm = FALSE,
  na_prop = NULL,
  na_n = NULL,
  na_consec = NULL,
  na_n_non = NULL,
  names = "{.fn}_{.col}"
)
}
\arguments{
\item{data}{\code{data.frame} The data.frame to calculate from.}

\item{date_time}{\code{\link[base]{Date}} The name of the date column in \code{data}.}

\item{elements}{\code{character} The name of the elements column in \code{data} to apply the function to.}

\item{station}{\code{character(1)} The name of the station column in \code{data}, if the data are for multiple station.}

\item{year}{\code{character(1)} The name of the year column in \code{data}.}

\item{month}{\code{character(1)} The name of the month column in \code{data}.}

\item{dekad}{\code{character(1)} The name of the dekad column in \code{data}.}

\item{pentad}{\code{character(1)} The name of the pentad column in \code{data}.}

\item{to}{\code{character(1)} The date-time format to put the data into.}

\item{by}{\code{character} The name of columns in \code{data} to group the summary data by.}

\item{doy}{\code{character(1)} The name of the day of the year (1-366) column in \code{data}. If \code{NULL} it will be created using \code{lubridate::year(data[[doy]])}.}

\item{doy_first}{\code{integer(1)} The first day of the year.}

\item{doy_last}{\code{integer(1)} The last day of the year.}

\item{max_val}{\code{logical(1)} If \code{TRUE} the extreme maximum is calculated.}

\item{min_val}{\code{logical(1)} If \code{TRUE} the extreme minimum is calculated.}

\item{first_date}{\code{logical(1)} If \code{TRUE} the first instance of \code{date_time} when the value equals the summary value is included. Generally only used for extreme summaries i.e. first \code{date_time} when the maximum occurred.}

\item{n_dates}{\code{logical(1)} If \code{TRUE} the number of \code{date_time} points when the value equals the summary value is included. Generally only used for extreme summaries i.e. number of days in which the minimum occurred.}

\item{last_date}{\code{logical(1)} If \code{TRUE} the last instance of \code{date_time} when the value equals the summary value is included. Generally only used for extreme summaries i.e. last \code{date_time} when the maximum occurred.}

\item{na_rm}{\code{logical(1)} If \code{TRUE} all \code{na_} parameters are ignored and missing
values are removed. If \code{FALSE} missing values are not removed unless
any \code{na_} parameters are specified.}

\item{na_prop}{\code{integer(1)} Max proportion of missing values allowed}

\item{na_n}{\code{integer(1)} Max number of missing values allowed}

\item{na_consec}{\code{integer(1)} Max number of consecutive missing values allowed}

\item{na_n_non}{\code{integer(1)} Min number of non-missing values required}

\item{names}{Format of column names. Passed to \code{.names} in
\code{dplyr::across}}
}
\value{
A summary data frame containing minimum/maximum values for element(s).
}
\description{
\code{climatic_extremes} returns a data table displaying the minimum and/or maximum
values for elements in a given time period. This can be provided by station.
}
\examples{
# Run example for a subset of the data
daily_niger_1 <- daily_niger \%>\% dplyr::filter(year > 1970)
# create a data frame displaying the min and max values for tmin/tmax for each day and station
climatic_extremes(data = daily_niger_1, date_time = "date", elements = c("tmin", "tmax"),
                  max_val = TRUE, min_val = TRUE,
                  station = "station_name", na_rm = TRUE)
}
